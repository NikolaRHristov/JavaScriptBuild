class o extends(await import("typedoc")).DefaultTheme{constructor(r){r.application.options.setValue("navigationLinks",{GitHub:"https://github.com/astro-compress"}),r.application.options.setValue("sidebarLinks",{GitHub:"https://github.com/astro-compress"}),super(r)}buildUrls(...[r,i]){const{Directory:a}=this._Mapping(r)??{};if(a){if(!(r.url&&p.URL_PREFIX.test(r.url))){const e=[a,`${p.getUrl(r)}.html`].join("/");i.push(new s(e,r,this.reflectionTemplate)),r.url=e,r.hasOwnDocument=!0}r.traverse(e=>(e instanceof n?this.buildUrls(e,i):p.applyAnchorUrl(e,r),!0))}else r.parent&&p.applyAnchorUrl(r,r.parent);return i}_Mapping=(...[r])=>this.Mapping.find(i=>r.kindOf(i.Kind));Mapping=[{Kind:[t.Class],Directory:"Class"},{Kind:[t.Interface],Directory:"Interface"},{Kind:[t.Enum],Directory:"Enum"},{Kind:[t.Namespace,t.Module],Directory:"Module"},{Kind:[t.TypeAlias],Directory:"Type"},{Kind:[t.Function],Directory:"Function"},{Kind:[t.Variable],Directory:"Variable"}]}const{DeclarationReflection:n,DefaultTheme:p,ReflectionKind:t,UrlMapping:s}=await import("typedoc");export{n as DeclarationReflection,p as DefaultTheme,t as ReflectionKind,s as UrlMapping,o as default};
