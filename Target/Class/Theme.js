class g extends(await import("typedoc")).DefaultTheme{buildUrls(...[r,e]){const{Directory:t}=this._Mapping(r)??{};if(t){if(!(r.url&&n.test(r.url))){const i=[t,`${p(r)}.html`].join("/");e.push(new M(i,r,this.reflectionTemplate)),r.url=i,r.hasOwnDocument=!0}r.traverse(i=>(i instanceof a&&this.buildUrls(i,e),!0))}else r.parent&&s(r,r.parent);return e}_Mapping=(...[r])=>this.Mapping.find(e=>r.kindOf(e.Kind));Mapping=[{Kind:[u],Directory:"Class"},{Kind:[o],Directory:"Interface"},{Kind:[l],Directory:"Enum"},{Kind:[m,d],Directory:"Module"},{Kind:[c],Directory:"Type"},{Kind:[y],Directory:"Function"},{Kind:[D],Directory:"Variable"}]}const{DeclarationReflection:a,DefaultTheme:{URL_PREFIX:n,getUrl:p,applyAnchorUrl:s},ReflectionKind:{Interface:o,Class:u,Enum:l,Namespace:m,Module:d,TypeAlias:c,Function:y,Variable:D},UrlMapping:M}=await import("typedoc");export{u as Class,a as DeclarationReflection,l as Enum,o as Interface,d as Module,m as Namespace,c as TypeAlias,n as URL_PREFIX,M as UrlMapping,D as Variable,y as _Function,s as applyAnchorUrl,g as default,p as getUrl};
