class m extends(await import("typedoc")).DefaultTheme{getRenderContext=(...[e])=>new o(this,e,this.application.options);buildUrls(e,i){const a=this._getMapping(e);if(a){if(!e.url||!n.URL_PREFIX.test(e.url)){const r=[a.directory,`${n.getUrl(e)}.html`].join("/");i.push(new l(r,e,a.template)),e.url=r,e.hasOwnDocument=!0}e.traverse(r=>(r instanceof p?this.buildUrls(r,i):n.applyAnchorUrl(r,e),!0))}else e.parent&&n.applyAnchorUrl(e,e.parent);return i}_getMapping=e=>this.Mapping.find(i=>e.kindOf(i.kind));Mapping=[{kind:[t.Class],directory:"Class",template:this.reflectionTemplate},{kind:[t.Interface],directory:"Interface",template:this.reflectionTemplate},{kind:[t.Enum],directory:"Enum",template:this.reflectionTemplate},{kind:[t.Namespace,t.Module],directory:"Module",template:this.reflectionTemplate},{kind:[t.TypeAlias],directory:"Type",template:this.reflectionTemplate},{kind:[t.Function],directory:"Function",template:this.reflectionTemplate},{kind:[t.Variable],directory:"Variable",template:this.reflectionTemplate}]}import{DeclarationReflection as p,DefaultTheme as n,ReflectionKind as t,UrlMapping as l}from"typedoc";const{default:o}=await import("./Context.js");export{o as _Context,m as default};
