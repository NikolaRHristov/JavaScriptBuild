var m=async(...[p,e])=>{p.forEach(async t=>(await(await import("fast-glob")).default(t.replaceAll("'","").replaceAll('"',""))).forEach(s=>a.push(s))),a.reverse();const i=r((await import("../Object/ESBuild.js")).default,{entryPoints:Object.fromEntries(a.map(t=>[t.replace("Source/","").split(".").slice(0,-1).join("."),t]))}),{metafile:n}=await(await import("esbuild")).build(e?.ESBuild?r(i,await(await import("../Function/File.js")).default(e.ESBuild)):i);console.log(n?await(await import("esbuild")).analyzeMetafile(n,{verbose:!0}):{}),e?.TypeScript?o(`tsc -p ${e.TypeScript}`):o("tsc"),o(`typedoc 			--commentStyle all 			--gitRevision main 			--customCss ${l(`${c}/../Sheet/TypeDoc.css`)} 			--includeVersion 			--out ./Documentation 			--plugin typedoc-plugin-remove-references 			--plugin typedoc-plugin-rename-defaults 			--plugin typedoc-plugin-mdn-links 			--plugin typedoc-plugin-zod 			--plugin typedoc-plugin-merge-modules 			--plugin @mxssfd/typedoc-theme 			--theme my-theme 			--entryPointStrategy expand 			--mergeModulesRenameDefaults 			--mergeModulesMergeMode module 			--entryPoints ${Object.values(i.entryPoints).join(" --entryPoints ")} && 			mv ./Documentation/functions ./Documentation/Function && 			find ./Documentation/ -iname *.html -exec sed -i -E 's:(href=".*)functions/:\\1Function/:g' {} ;`)};const{default:o}=await import("../Function/Exec.js"),{deepmerge:r}=await import("deepmerge-ts"),{resolve:l}=await import("path"),a=[],c=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{c as Current,o as Exec,a as Pipe,r as deepmerge,m as default,l as resolve};
