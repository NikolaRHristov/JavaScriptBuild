var u=async(...[s,t])=>{s.forEach(async e=>(await(await import("fast-glob")).default(e.replaceAll("'","").replaceAll('"',""))).forEach(l=>o.push(l))),o.reverse();const i=r((await import("../Object/ESBuild.js")).default,{entryPoints:Object.fromEntries(o.map(e=>[e.replace("Source/","").split(".").slice(0,-1).join("."),e]))});console.log(await(await import("esbuild")).analyzeMetafile((await(await import("esbuild")).build(t?.ESBuild?r(i,await(await import("../Function/File.js")).default(t.ESBuild)):i))?.metafile??"",{verbose:!0})),a(`tsc -p ${t?.TypeScript??"tsconfig.json"}`),a(["typedoc","--commentStyle all","--gitRevision main",`--customCss ${n(`${p}/../Stylesheet/Theme.css`)}`,"--includeVersion","--out ./Documentation",`--plugin ${n(`${p}/../../Target/Function/Load.js`)}`,"--plugin typedoc-plugin-remove-references","--plugin typedoc-plugin-rename-defaults","--plugin typedoc-plugin-mdn-links","--plugin typedoc-plugin-zod","--plugin typedoc-plugin-merge-modules","--plugin typedoc-plugin-keywords",`--keywords ${(await(await import("../Function/JSON.js")).default("package.json",process.cwd()))?.keywords?.join(" --keywords ")??" typescript-esbuild "}`,"--theme TypeScriptESBuild","--entryPointStrategy expand","--mergeModulesRenameDefaults","--mergeModulesMergeMode module",`--entryPoints ${Object.values(i.entryPoints).join(" --entryPoints ")}`].join(" "))};const{default:a}=await import("../Function/Exec.js"),{deepmerge:r}=await import("deepmerge-ts"),{resolve:n}=await import("path"),o=[],p=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{p as Current,a as Exec,o as Pipe,r as deepmerge,u as default,n as resolve};
