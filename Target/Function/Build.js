var l=async(...[p,t])=>{for(const e of p)for(const s of await(await import("fast-glob")).default(e.replaceAll("'","").replaceAll('"',"")))a.push(s);a.reverse();const i=o((await import("../Variable/ESBuild.js")).default,{entryPoints:Object.fromEntries(a.map(e=>[e.replace("Source/","").split(".").slice(0,-1).join("."),e]))});console.log(await(await import("esbuild")).analyzeMetafile((await(await import("esbuild")).build(t?.ESBuild?o(i,await(await import("../Function/File.js")).default(t.ESBuild)):i))?.metafile??"",{verbose:!0})),r(`tsc -p ${t?.TypeScript??"tsconfig.json"}`),r(`tsc-alias -p ${t?.TypeScript??"tsconfig.json"}`)};const{default:r}=await import("../Function/Exec.js"),{default:o}=await import("../Function/Merge.js"),{resolve:c}=await import("path"),a=[],n=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{n as Current,r as Exec,o as Merge,a as Pipe,l as default,c as resolve};
