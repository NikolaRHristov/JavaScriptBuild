var u=async(...[p,e])=>{for(const t of p)for(const n of await(await import("fast-glob")).default(t.replaceAll("'","").replaceAll('"',""),{ignore:e?.Exclude??[]}))r.push(n);r.reverse();let a=i((await import("../Variable/ESBuild.js")).default,{entryPoints:Object.fromEntries(r.map(t=>[`${s(t)}/${c(t,l(t))}`.replace(f(t).split(m).at(0)??"",""),t]))});a=i(e?.ESBuild?i(a,await(await import("./File.js")).default(e.ESBuild)):a,{tsconfig:e?.TypeScript??"tsconfig.json"}),a.plugins?.push({name:"TypeScript",setup({onEnd:t}){t(async()=>{await o(`tsc -p ${a.tsconfig}`),await o(`tsc-alias -f -p ${a.tsconfig}`)})}}),e?.Watch?await(await(await import("esbuild")).context(a)).watch():console.log(await(await import("esbuild")).analyzeMetafile((await(await import("esbuild")).build(a))?.metafile??"",{verbose:!0}))};const{default:o}=await import("../Function/Exec.js"),{default:i}=await import("../Function/Merge.js"),r=[],{extname:l,basename:c,relative:w,dirname:s,normalize:f,sep:m}=await import("path"),d=(await import("url")).fileURLToPath(s(import.meta.url));export{d as Current,o as Exec,i as Merge,r as Pipe,c as basename,u as default,s as dirname,l as extname,f as normalize,w as relative,m as sep};
