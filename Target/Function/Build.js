var c=async(...[p,t])=>{p.forEach(async i=>(await(await import("fast-glob")).default(i.replaceAll("'","").replaceAll('"',""))).forEach(s=>a.push(s))),a.reverse();const o=r((await import("../Object/ESBuild.js")).default,{entryPoints:Object.fromEntries(a.map(i=>[i.replace("Source/","").split(".").slice(0,-1).join("."),i]))}),{metafile:n}=await(await import("esbuild")).build(t?.ESBuild?r(o,await(await import("../Function/File.js")).default(t?.ESBuild)):o);console.log(n?await(await import("esbuild")).analyzeMetafile(n,{verbose:!0}):{}),t?.TypeScript?e(`tsc -p ${t?.TypeScript}`):e("tsc"),e(`typedoc 			--commentStyle all 			--gitRevision main 			--customCss ${(await import("path")).resolve(`${l}/../Sheet/TypeDoc.css`)} 			--includeVersion 			--out ./Documentation 			--plugin typedoc-plugin-remove-references 			--plugin typedoc-plugin-rename-defaults 			--plugin typedoc-plugin-mdn-links 			--plugin typedoc-plugin-zod 			--plugin typedoc-plugin-merge-modules 			--entryPointStrategy expand 			--mergeModulesRenameDefaults 			--mergeModulesMergeMode module 			--entryPoints ${Object.values(o.entryPoints).join(" --entryPoints ")}`),setTimeout(()=>{e("mv ./Documentation/functions ./Documentation/Function"),e(`find ./Documentation -type f -name '*.html' -exec sed -i -E --regexp-extended 's:(href="([^"]+)?)functions/:\\1Function/:g' {} ;`)},1e4)};const{default:e}=await import("../Function/Exec.js"),{deepmerge:r}=await import("deepmerge-ts"),a=[],l=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{l as Current,e as Exec,a as Pipe,r as deepmerge,c as default};
