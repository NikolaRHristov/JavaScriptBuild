var u=async(...[s,e])=>{s.forEach(async t=>(await(await import("fast-glob")).default(t.replaceAll("'","").replaceAll('"',""))).forEach(c=>a.push(c))),a.reverse();const i=n((await import("../Object/ESBuild.js")).default,{entryPoints:Object.fromEntries(a.map(t=>[t.replace("Source/","").split(".").slice(0,-1).join("."),t]))}),{metafile:r}=await(await import("esbuild")).build(e?.ESBuild?n(i,await(await import("../Function/File.js")).default(e?.ESBuild)):i);console.log(r?await(await import("esbuild")).analyzeMetafile(r,{verbose:!0}):{}),e?.TypeScript?o(`tsc -p ${e?.TypeScript}`):o("tsc"),o(`typedoc 			--commentStyle all 			--gitRevision main 			--customCss ${p(`${l}/../Sheet/TypeDoc.css`)} 			--includeVersion 			--out ./Documentation 			--plugin typedoc-plugin-remove-references 			--plugin typedoc-plugin-rename-defaults 			--plugin typedoc-plugin-mdn-links 			--plugin typedoc-plugin-zod 			--plugin typedoc-plugin-merge-modules 			--entryPointStrategy expand 			--mergeModulesRenameDefaults 			--mergeModulesMergeMode module 			--entryPoints ${Object.values(i.entryPoints).join(" --entryPoints ")} && cp ${p(`${l}/../../Target/Function/Worker.js`)} ./Documentation/_worker.js`)};const{default:o}=await import("../Function/Exec.js"),{deepmerge:n}=await import("deepmerge-ts"),{resolve:p}=await import("path"),a=[],l=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{l as Current,o as Exec,a as Pipe,n as deepmerge,u as default,p as resolve};
