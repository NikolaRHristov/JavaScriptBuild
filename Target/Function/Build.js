var l=async(...[s,a])=>{for(const e of s)for(const c of await(await import("fast-glob")).default(e.replaceAll("'","").replaceAll('"',"")))r.push(c);r.reverse();const t=o((await import("../Variable/ESBuild.js")).default,{entryPoints:Object.fromEntries(r.map(e=>[e.replace("Source/","").split(".").slice(0,-1).join("."),e])),tsconfig:a?.TypeScript??"tsconfig.json"});console.log(await(await import("esbuild")).analyzeMetafile((await(await import("esbuild")).build(a?.ESBuild?o(t,await(await import("./File.js")).default(a.ESBuild)):t))?.metafile??"",{verbose:!0})),i(`tsc -p ${t.tsconfig}`),i(`tsc-alias -p ${t.tsconfig}`),i(`resolve-tspaths -p ${t.tsconfig}`)};const{default:i}=await import("../Function/Exec.js"),{default:o}=await import("../Function/Merge.js"),{resolve:p}=await import("path"),r=[],n=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{n as Current,i as Exec,o as Merge,r as Pipe,l as default,p as resolve};
