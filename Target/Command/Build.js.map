{
  "version": 3,
  "sources": ["../../Source/Command/Build.ts"],
  "sourcesContent": ["import { exec as Exec } from \"child_process\";\nimport { deepmerge as Merge } from \"deepmerge-ts\";\nimport type { BuildOptions } from \"esbuild\";\nimport { build as Build } from \"esbuild\";\nimport type { Pattern } from \"fast-glob\";\nimport Glob from \"fast-glob\";\nimport esbuild from \"../Configuration/esbuild.js\";\n\nexport type Pipe = string[];\n\nexport default async (Files: Pattern[], Options?: { TypeScript?: string }) => {\n\tconst Pipe: Pipe = [];\n\n\tfor (const File of Files) {\n\t\tfor (const _File of await Glob(\n\t\t\tFile.replaceAll(\"'\", \"\").replaceAll('\"', \"\")\n\t\t)) {\n\t\t\tPipe.push(_File);\n\t\t}\n\t}\n\n\tPipe.reverse();\n\n\tawait Build(\n\t\tMerge(esbuild, {\n\t\t\tentryPoints: Object.fromEntries(\n\t\t\t\tPipe.map((File) => [\n\t\t\t\t\tFile.replace(\"Source/\", \"\")\n\t\t\t\t\t\t.split(\".\")\n\t\t\t\t\t\t.slice(0, -1.0)\n\t\t\t\t\t\t.join(\".\"),\n\t\t\t\t\tFile,\n\t\t\t\t])\n\t\t\t),\n\t\t} satisfies BuildOptions)\n\t);\n\n\tif (Options?.TypeScript) {\n\t\tExec(`tsc -p ${Options?.TypeScript}`);\n\t} else {\n\t\tExec(\"tsc\");\n\t}\n};\n"],
  "mappings": "AAAA,SAAS,QAAQ,YAAY;AAC7B,SAAS,aAAa,aAAa;AAEnC,SAAS,SAAS,aAAa;AAE/B,OAAO,UAAU;AACjB,OAAO,aAAa;AAIpB,IAAO,gBAAQ,OAAO,OAAkB,YAAsC;AAC7E,QAAM,OAAa,CAAC;AAEpB,aAAW,QAAQ,OAAO;AACzB,eAAW,SAAS,MAAM;AAAA,MACzB,KAAK,WAAW,KAAK,EAAE,EAAE,WAAW,KAAK,EAAE;AAAA,IAC5C,GAAG;AACF,WAAK,KAAK,KAAK;AAAA,IAChB;AAAA,EACD;AAEA,OAAK,QAAQ;AAEb,QAAM;AAAA,IACL,MAAM,SAAS;AAAA,MACd,aAAa,OAAO;AAAA,QACnB,KAAK,IAAI,CAAC,SAAS;AAAA,UAClB,KAAK,QAAQ,WAAW,EAAE,EACxB,MAAM,GAAG,EACT,MAAM,GAAG,EAAI,EACb,KAAK,GAAG;AAAA,UACV;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAwB;AAAA,EACzB;AAEA,MAAI,SAAS,YAAY;AACxB,SAAK,UAAU,SAAS,UAAU,EAAE;AAAA,EACrC,OAAO;AACN,SAAK,KAAK;AAAA,EACX;AACD;",
  "names": []
}
