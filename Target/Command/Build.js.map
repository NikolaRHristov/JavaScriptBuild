{
  "version": 3,
  "sources": ["../../Source/Command/Build.ts"],
  "sourcesContent": ["import { exec as Exec } from \"child_process\";\nimport { deepmerge as Merge } from \"deepmerge-ts\";\nimport type { BuildOptions } from \"esbuild\";\nimport { build as Build } from \"esbuild\";\nimport type { Pattern } from \"fast-glob\";\nimport Glob from \"fast-glob\";\nimport esbuild from \"../Configuration/esbuild.js\";\n\nexport type Pipe = string[];\n\nexport default async (Files: Pattern[], Options?: { TypeScript?: string }) => {\n\tconst Pipe: Pipe = [];\n\n\tfor (const File of Files) {\n\t\tfor (const _File of await Glob(\n\t\t\tFile.replaceAll(\"'\", \"\").replaceAll('\"', \"\")\n\t\t)) {\n\t\t\tPipe.push(_File);\n\t\t}\n\t}\n\n\tPipe.reverse();\n\n\tawait Build(\n\t\tMerge(esbuild, {\n\t\t\tentryPoints: Object.fromEntries(\n\t\t\t\tPipe.map((File) => [\n\t\t\t\t\tFile.replace(\"Source/\", \"\")\n\t\t\t\t\t\t.split(\".\")\n\t\t\t\t\t\t.slice(0, -1.0)\n\t\t\t\t\t\t.join(\".\"),\n\t\t\t\t\tFile,\n\t\t\t\t])\n\t\t\t),\n\t\t} satisfies BuildOptions)\n\t);\n\n\tif (Options?.TypeScript) {\n\t\tExec(`tsc -p ${Options?.TypeScript}`);\n\t} else {\n\t\tExec(\"tsc\");\n\t}\n};\n"],
  "mappings": "AAAA,OAAS,QAAQA,MAAY,gBAC7B,OAAS,aAAaC,MAAa,eAEnC,OAAS,SAASC,MAAa,UAE/B,OAAOC,MAAU,YACjB,OAAOC,MAAa,8BAIpB,IAAOC,EAAQ,MAAOC,EAAkBC,IAAsC,CAC7E,MAAMC,EAAa,CAAC,EAEpB,UAAWC,KAAQH,EAClB,UAAWI,KAAS,MAAMP,EACzBM,EAAK,WAAW,IAAK,EAAE,EAAE,WAAW,IAAK,EAAE,CAC5C,EACCD,EAAK,KAAKE,CAAK,EAIjBF,EAAK,QAAQ,EAEb,MAAMN,EACLD,EAAMG,EAAS,CACd,YAAa,OAAO,YACnBI,EAAK,IAAKC,GAAS,CAClBA,EAAK,QAAQ,UAAW,EAAE,EACxB,MAAM,GAAG,EACT,MAAM,EAAG,EAAI,EACb,KAAK,GAAG,EACVA,CACD,CAAC,CACF,CACD,CAAwB,CACzB,EAEIF,GAAS,WACZP,EAAK,UAAUO,GAAS,UAAU,EAAE,EAEpCP,EAAK,KAAK,CAEZ",
  "names": ["Exec", "Merge", "Build", "Glob", "esbuild", "Build_default", "Files", "Options", "Pipe", "File", "_File"]
}
